{"ast":null,"code":"import _classCallCheck from \"C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nsbra\\\\Downloads\\\\React-Music-Player-master\\\\React-Music-Player-master\\\\src\\\\components\\\\error-boundary\\\\error.boundary.component.jsx\";\nimport React from 'react';\n/*\r\nA class component becomes an error boundary if it defines either (or both) of the\r\nlifecycle methods static getDerivedStateFromError() or componentDidCatch().\r\nUse static getDerivedStateFromError() to render a fallback UI after an error\r\nhas been thrown. Use componentDidCatch() to log error information.\r\nclass ErrorBoundary ext\r\n */\n\nimport { ErrorImageOverlay, ErrorImageContainer, ErrorImageText } from './error-boundary.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      // You can also log the error to an error reporting service\n      console.log(error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return /*#__PURE__*/_jsxDEV(ErrorImageOverlay, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorImageContainer, {\n            imageUrl: \"https://i.imgur.com/WvEu0cO.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ErrorImageText, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"The Page is broke like you \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 56\n              }, this), \"\\u9875\\u9762\\u574F\\u4E86\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/src/components/error-boundary/error.boundary.component.jsx"],"names":["React","ErrorImageOverlay","ErrorImageContainer","ErrorImageText","ErrorBoundary","props","state","hasError","error","errorInfo","console","log","children","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACIC,iBADJ,EAEIC,mBAFJ,EAGIC,cAHJ,QAIO,yBAJP;;;IAMMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFe;AAGlB;;;;WAOD,2BAAkBC,KAAlB,EAAyBC,SAAzB,EAAoC;AAChC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,SAAnB;AACH;;;WAED,kBAAS;AACL,UAAI,KAAKH,KAAL,CAAWC,QAAf,EAAyB;AACrB;AACA,4BACI,QAAC,iBAAD;AAAA,kCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,cAAD;AAAA,mCACI;AAAA,qEAC+B;AAAA;AAAA;AAAA;AAAA,sBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH;;AAED,aAAO,KAAKF,KAAL,CAAWO,QAAlB;AACH;;;WA3BD,kCAAgCJ,KAAhC,EAAuC;AACnC;AACA,aAAO;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACH;;;;EATuBP,KAAK,CAACa,S;;AAqClC,eAAeT,aAAf","sourcesContent":["import React from 'react';\r\n/*\r\nA class component becomes an error boundary if it defines either (or both) of the\r\nlifecycle methods static getDerivedStateFromError() or componentDidCatch().\r\nUse static getDerivedStateFromError() to render a fallback UI after an error\r\nhas been thrown. Use componentDidCatch() to log error information.\r\nclass ErrorBoundary ext\r\n */\r\n\r\nimport {\r\n    ErrorImageOverlay,\r\n    ErrorImageContainer,\r\n    ErrorImageText\r\n} from './error-boundary.styles';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        console.log(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return (\r\n                <ErrorImageOverlay>\r\n                    <ErrorImageContainer imageUrl='https://i.imgur.com/WvEu0cO.png'/>\r\n                    <ErrorImageText>\r\n                        <span>\r\n                            The Page is broke like you <br></br>\r\n                            页面坏了\r\n                        </span>\r\n                    </ErrorImageText>\r\n                </ErrorImageOverlay>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;\r\n"]},"metadata":{},"sourceType":"module"}