{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsbra\\\\Downloads\\\\React-Music-Player-master\\\\React-Music-Player-master\\\\src\\\\components\\\\DurationBar\\\\DurationBar.js\",\n    _this = this;\n\nimport React from 'react';\nimport H5AudioPlayer from 'react-h5-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DurationBar = function DurationBar(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      'margin': '0 auto',\n      'position': 'relative',\n      'width': '98%'\n    },\n    children: /*#__PURE__*/_jsxDEV(H5AudioPlayer, {\n      ref: props.audioRef,\n      src: props.songURL,\n      onCanPlay: function onCanPlay() {\n        props.initializeTime();\n      },\n      onDragStart: function onDragStart() {\n        return props.playing ? null : props.onDragIndicator();\n      },\n      onAbort: function onAbort() {\n        console.log(props.audioComponent.audio);\n        return props.playing ? props.audioComponent.audio.play() : props.audioComponent.audio.pause();\n      },\n      onEnded: function onEnded() {\n        return props.isShuffleOn ? props.randomizeSong() : props.onEnd();\n      },\n      preload: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = DurationBar;\nexport default DurationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DurationBar\");","map":{"version":3,"sources":["C:/Users/nsbra/Downloads/React-Music-Player-master/React-Music-Player-master/src/components/DurationBar/DurationBar.js"],"names":["React","H5AudioPlayer","DurationBar","props","audioRef","songURL","initializeTime","playing","onDragIndicator","console","log","audioComponent","audio","play","pause","isShuffleOn","randomizeSong","onEnd"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,sBACE;AAAK,IAAA,KAAK,EAAE;AAAC,gBAAU,QAAX;AACC,kBAAY,UADb;AAEC,eAAS;AAFV,KAAZ;AAAA,2BAKS,QAAC,aAAD;AACQ,MAAA,GAAG,EAAEA,KAAK,CAACC,QADnB;AAEQ,MAAA,GAAG,EAAED,KAAK,CAACE,OAFnB;AAGQ,MAAA,SAAS,EAAE,qBAAM;AACfF,QAAAA,KAAK,CAACG,cAAN;AACD,OALT;AAMQ,MAAA,WAAW,EAAE,uBAAK;AAChB,eAAOH,KAAK,CAACI,OAAN,GAAgB,IAAhB,GAAuBJ,KAAK,CAACK,eAAN,EAA9B;AACD,OART;AASQ,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,cAAN,CAAqBC,KAAjC;AAEA,eAAOT,KAAK,CAACI,OAAN,GAAgBJ,KAAK,CAACQ,cAAN,CAAqBC,KAArB,CAA2BC,IAA3B,EAAhB,GAAoDV,KAAK,CAACQ,cAAN,CAAqBC,KAArB,CAA2BE,KAA3B,EAA3D;AACD,OAbT;AAcQ,MAAA,OAAO,EAAE,mBAAM;AACb,eAAOX,KAAK,CAACY,WAAN,GAAoBZ,KAAK,CAACa,aAAN,EAApB,GAA4Cb,KAAK,CAACc,KAAN,EAAnD;AACD,OAhBT;AAiBQ,MAAA,OAAO,EAAC;AAjBhB;AAAA;AAAA;AAAA;AAAA;AALT;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CA5BD;;KAAMf,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport H5AudioPlayer from 'react-h5-audio-player';\r\n\r\n\r\nconst DurationBar = (props) => {\r\n  return (\r\n    <div style={{'margin': '0 auto',\r\n                 'position': 'relative',\r\n                 'width': '98%'}}>\r\n                   {/* The core of this app that is responsible for playing the audio, calculating durations and calculating the indicators actions.\r\n                       For more info : https://github.com/lhz516/react-h5-audio-player */}\r\n             <H5AudioPlayer\r\n                     ref={props.audioRef}\r\n                     src={props.songURL}\r\n                     onCanPlay={() => {\r\n                       props.initializeTime();\r\n                     }}\r\n                     onDragStart={() =>{\r\n                       return props.playing ? null : props.onDragIndicator();            \r\n                     }}\r\n                     onAbort={() => {\r\n                       console.log(props.audioComponent.audio)\r\n                       \r\n                       return props.playing ? props.audioComponent.audio.play() : props.audioComponent.audio.pause();\r\n                     }}\r\n                     onEnded={() => {\r\n                       return props.isShuffleOn ? props.randomizeSong() : props.onEnd();\r\n                     }}\r\n                     preload='auto'\r\n                     />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DurationBar;"]},"metadata":{},"sourceType":"module"}